<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:tb="clr-namespace:GeoGen.Studio.PlugIns.ToolBars" 
    xmlns:GrayscaleEffect="clr-namespace:GrayscaleEffect;assembly=GrayscaleEffect">
    <GrayscaleEffect:GrayscaleEffect x:Key="grayscaleEffect">
        
    </GrayscaleEffect:GrayscaleEffect>
    <Style TargetType="{x:Type tb:ToolBarButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tb:ToolBarButton}">
                    <Button 
                        Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Command}"
                        ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}"
                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}">                        
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled,RelativeSource={RelativeSource Self}}" Value="False">
                                        <Setter Property="Effect" Value="{StaticResource grayscaleEffect}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type tb:ToolBarSeparator}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tb:ToolBarSeparator}">
                    <Rectangle Width="1" Height="19" Fill="DarkGray" Margin="2"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type tb:ToolBarCheckableButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tb:ToolBarCheckableButton}">
                    <ToggleButton 
                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}" 
                        ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToolTip}" 
                        Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Command}" 
                        IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked}"
                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled,RelativeSource={RelativeSource Self}}" Value="False">
                                        <Setter Property="Effect" Value="{StaticResource grayscaleEffect}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type tb:ToolBarControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tb:ToolBarControl}">
                    <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>